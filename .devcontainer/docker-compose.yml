version: '3.8'

networks:
  db-network:
    driver: bridge
  redpanda-network:
    driver: bridge

volumes:
  postgres-data: null
  redpanda-data: null

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - db.env
    volumes:
      - ../..:/workspaces:cached
    tty: true
    ports:
      - 8042:8042
    networks:
      - db-network
      - redpanda-network

  db:
    image: postgres:15
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - db.env
    networks:
      - db-network

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.17
    restart: unless-stopped
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
      - --default-log-level=debug
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    volumes:
      - redpanda-data:/var/lib/redpanda/data
    networks:
      - redpanda-network

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:v2.3.1
    restart: unless-stopped
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    ports:
      - 8080:8080
    networks:
      - redpanda-network
    depends_on:
      - redpanda
